############################################
# visual
############################################
# use 256 colors
set -g default-terminal "screen-256color"

# Start numbering at 1
set -g base-index 1

# renumber windows automatically without gap
set-option -g renumber-windows on

# hightlight current active window
set-window-option -g window-status-current-bg red

# disable window rename
set-window-option -g automatic-rename off
set-option -g allow-rename off

# enable mouse action, such as scrooling
set -g mouse on

############################################
# Bind default keybindings
# No interface available to default
############################################
# First remove *all* keybindings
unbind-key -a
# Now reinsert all the regular tmux keys
 bind-key C-b send-prefix
 bind-key C-o rotate-window
 bind-key C-z suspend-client
 bind-key Space next-layout
 bind-key ! break-pane
 bind-key '"' split-window
 bind-key '#' list-buffers
 bind-key '$' command-prompt -I "#S" "rename-session '%%'"
 bind-key % split-window -h
 bind-key k confirm-before -p "kill-window #W? (y/n)" kill-window
 bind-key "'" command-prompt -p index "select-window -t ':%%'"
 bind-key ( switch-client -p
 bind-key ) switch-client -n
 bind-key , command-prompt -I "#W" "rename-window '%%'"
 bind-key - delete-buffer
 bind-key . command-prompt "move-window -t '%%'"
 bind-key 0 select-window -t :0
 bind-key 1 select-window -t :1
 bind-key 2 select-window -t :2
 bind-key 3 select-window -t :3
 bind-key 4 select-window -t :4
 bind-key 5 select-window -t :5
 bind-key 6 select-window -t :6
 bind-key 7 select-window -t :7
 bind-key 8 select-window -t :8
 bind-key 9 select-window -t :9
 bind-key : command-prompt
 bind-key \; last-pane
 bind-key = choose-buffer
 bind-key ? list-keys
 bind-key D choose-client
 bind-key L switch-client -l
 bind-key [ copy-mode
 bind-key ] paste-buffer
 bind-key c new-window
 bind-key d confirm-before -p "detach session? (y/n)" detach-client
 bind-key f command-prompt "find-window '%%'"
 bind-key i display-message
 bind-key l last-window
 bind-key n next-window
 bind-key o select-pane -t :.+
 bind-key p previous-window
 bind-key q display-panes
 bind-key r refresh-client
 bind-key s choose-tree
 bind-key t clock-mode
 bind-key w choose-window
 bind-key x confirm-before -p "kill-pane #P? (y/n)" kill-pane
 bind-key z resize-pane -Z
 bind-key { swap-pane -U
 bind-key } swap-pane -D
 bind-key '~' show-messages
 bind-key PPage copy-mode -u
 bind-key -r Up select-pane -U
 bind-key -r Down select-pane -D
 bind-key -r Left select-pane -L
 bind-key -r Right select-pane -R
 bind-key M-1 select-layout even-horizontal
 bind-key M-2 select-layout even-vertical
 bind-key M-3 select-layout main-horizontal
 bind-key M-4 select-layout main-vertical
 bind-key M-5 select-layout tiled
 bind-key M-n next-window -a
 bind-key M-o rotate-window -D
 bind-key M-p previous-window -a
 bind-key -r M-Up resize-pane -U 5
 bind-key -r M-Down resize-pane -D 5
 bind-key -r M-Left resize-pane -L 5
 bind-key -r M-Right resize-pane -R 5
 bind-key -r C-Up resize-pane -U
 bind-key -r C-Down resize-pane -D
 bind-key -r C-Left resize-pane -L
 bind-key -r C-Right resize-pane -R
############################################
# Key bindings
############################################
# remap prefix to Control + a
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
    bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
    bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
    bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
    bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
    bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
    bind-key -T copy-mode-vi C-h select-pane -L
    bind-key -T copy-mode-vi C-j select-pane -D
    bind-key -T copy-mode-vi C-k select-pane -U
    bind-key -T copy-mode-vi C-l select-pane -R
    bind-key -T copy-mode-vi C-\ select-pane -l

# vertical split and horizontal split
# sync with vim settings
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Easy config reload
bind-key r source-file ~/.tmux.conf \; display-message "tmux.conf reloaded"

############################################
# Copy mode
############################################

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

